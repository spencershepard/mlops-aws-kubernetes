name: Terraform Apply

on:
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Create S3 bucket and DynamoDB table for Terraform backend
        run: |
          aws s3api create-bucket --bucket ${{ secrets.TF_STATE_BUCKET }} --region ${{ vars.AWS_REGION }} || echo "Bucket already exists"
          aws dynamodb create-table \
            --table-name ${{ secrets.TF_STATE_TABLE }} \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST \
            --region ${{ vars.AWS_REGION }} || echo "Table already exists"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_TABLE }}" \
            -backend-config="key=eks/terraform.tfstate" \
            -backend-config="encrypt=true"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Terraform Apply
        run: cd terraform && terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          TF_VAR_aws_region: ${{ vars.AWS_REGION }}
          TF_VAR_eks_cluster_name: ${{ vars.EKS_CLUSTER_NAME }}
